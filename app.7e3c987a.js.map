{"version":3,"sources":["js/dom.ts","js/app.ts"],"names":[],"mappings":";AAkBa,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAlBA,QAAA,KAAwB,SAAS,eAAe,gBAChD,QAAA,KAAyB,SAAS,eAAe,QACjD,QAAA,WAA+B,SAAS,eAAe,cACvD,QAAA,SAA6B,SAAS,eAAe,aACrD,QAAA,SAA6B,SAAS,eAAe,aAErD,QAAA,SAA8B,SAAS,eAAe,aACtD,QAAA,UAA+B,SAAS,eAAe,cAEvD,QAAA,SAA4B,SAAS,eAAe,YACpD,QAAA,MAAyB,SAAS,eAAe,SAEjD,QAAA,KAA0B,SAAS,eAAe,QAClD,QAAA,KAA0B,SAAS,eAAe,QAClD,QAAA,KAA0B,SAAS,eAAe,QAElD,QAAA,QAA0B,SAAS,cAAc,YAEjD,QAAA,SAAgC,SAAS,eAAe;;ACmHrE,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IApIA,IAAA,EAAA,QAAA,SAiBA,QAAQ,IAAI,eAGZ,IAAI,EAAgC,KAAK,MAAM,aAAa,QAAQ,kBAAoB,MAEpF,IACA,EAAA,KAAK,MAAQ,EAAS,MAAQ,GAC9B,EAAA,WAAW,OAAS,EAAS,YAAc,GAAG,WACxB,SAAlB,EAAS,KACT,EAAA,SAAS,SAAU,EAEnB,EAAA,SAAS,SAAU,GAI3B,IAAI,EAAQ,EACR,EAAQ,EAEZ,EAAA,KAAK,iBAAiB,SAAU,SAAA,GAC5B,EAAE,iBAEI,IAAA,EAAgB,EAAA,KAAK,SAE3B,EAAW,CACP,KAAM,EAAS,GAAG,MAClB,GAAI,QACJ,KAAM,EAAS,GAAG,QAAU,EAAS,GAAG,MAAQ,EAAS,GAAG,MAC5D,WAAY,EAAS,GAAG,MACxB,KAAM,QAGV,aAAa,QAAQ,gBAAiB,KAAK,UAAU,IACrD,SAAS,gBAAgB,MAAM,YAAY,SAAU,YAGzD,IAmBI,EAnBE,EAAS,SAAC,GACN,IAAA,EAAO,KAAK,MAAM,KAAK,UAAY,EAAM,GAAK,GAC9C,EAAO,KAAK,MAAM,KAAK,UAAY,EAAM,GAAK,GAE7C,MAAA,CAAE,KAAM,EAAK,WAAa,MAAQ,EAAK,WAAY,SAAU,EAAO,IAGzE,EAAkB,SAAC,EAAa,GAI3B,IAHH,IAAA,EAAS,EACT,EAAS,EAEN,IAAW,GAAU,IAAW,GAAU,IAAW,GACxD,EAAS,KAAK,MAAM,KAAK,SAAW,EAAM,GAC1C,EAAS,KAAK,MAAM,KAAK,SAAW,EAAM,GAGvC,MAAA,CAAC,EAAQ,IAId,EAAS,SAAC,GACZ,IACI,GAAK,EAAE,OAAO,UAAU,SAAS,YACjC,IAEJ,EAAA,UAAU,QACV,EAAA,SAAS,aAAa,QAAS,OAC/B,cAAc,GAEd,EAAA,KAAK,UAAU,OAAO,WACtB,EAAA,KAAK,UAAU,OAAO,WACtB,EAAA,KAAK,UAAU,OAAO,WAEtB,EAAA,MAAM,UAAe,GAAA,OAAA,EAAS,KAAA,OAAA,GAC9B,KAGE,EAAiB,WACf,GAAC,EAAD,CACE,IAAA,EAAM,EAAO,EAAS,YAC5B,EAAA,SAAS,UAAY,EAAI,KAEnB,IAAA,EAAU,CAAC,EAAA,KAAM,EAAA,KAAM,EAAA,MAEvB,EAAO,KAAK,MAAM,KAAK,SAAW,EAAQ,QAChD,EAAQ,GAAM,UAAY,EAAI,SAAS,WACvC,EAAQ,GAAM,UAAU,IAAI,WAExB,IAAA,EAAe,EAAgB,EAAS,WAAY,EAAI,UAC5D,GAAS,EAAO,GAAK,EAAQ,QAAQ,UAAY,EAAa,GAAG,WACjE,GAAS,EAAO,GAAK,EAAQ,QAAQ,UAAY,EAAa,GAAG,WAE7D,IAAA,EAA2B,SAAlB,EAAS,KAAkB,EAAI,GACxC,EAAgB,IACd,EAAW,IAAM,EACvB,EAAA,SAAS,aAAa,QAAS,OAE/B,EAAS,YAAY,WACjB,KACA,GAAiB,GAEG,EAChB,EAAO,MAEP,EAAA,SAAS,aAAa,QAAS,KAAK,MAAM,GAAe,aAE9D,OAGP,EAAA,SAAS,iBAAiB,QAAS,WAC/B,EAAA,SAAS,UAAU,IAAI,QACvB,EAAA,QAAQ,UAAU,OAAO,QACzB,EAAA,KAAK,UAAU,OAAO,QACtB,EAAA,KAAK,UAAU,OAAO,QACtB,EAAA,KAAK,UAAU,OAAO,QACtB,MAGJ,EAAA,KAAK,iBAAiB,QAAS,GAC/B,EAAA,KAAK,iBAAiB,QAAS,GAC/B,EAAA,KAAK,iBAAiB,QAAS","file":"app.7e3c987a.js","sourceRoot":"../src","sourcesContent":["export const form: HTMLFormElement = document.getElementById('userSettings') as HTMLFormElement;\nexport const name: HTMLInputElement = document.getElementById('name') as HTMLInputElement;\nexport const upperlimit: HTMLInputElement = document.getElementById('upperlimit') as HTMLInputElement;\nexport const timeSlow: HTMLInputElement = document.getElementById('time_slow') as HTMLInputElement;\nexport const timeFast: HTMLInputElement = document.getElementById('time_fast') as HTMLInputElement;\n\nexport const startBtn: HTMLButtonElement = document.getElementById('start-btn') as HTMLButtonElement;\nexport const hiddenBtn: HTMLButtonElement = document.getElementById('hidden-btn') as HTMLButtonElement;\n\nexport const question: HTMLSpanElement = document.getElementById('question') as HTMLSpanElement;\nexport const score: HTMLSpanElement = document.getElementById('score') as HTMLSpanElement;\n\nexport const ans1: HTMLButtonElement = document.getElementById('ans1') as HTMLButtonElement;\nexport const ans2: HTMLButtonElement = document.getElementById('ans2') as HTMLButtonElement;\nexport const ans3: HTMLButtonElement = document.getElementById('ans3') as HTMLButtonElement;\n\nexport const wrapper: HTMLDivElement = document.querySelector('.wrapper') as HTMLDivElement;\n\nexport const progress: HTMLProgressElement = document.getElementById('progress') as HTMLProgressElement;\n","import { SettingsType } from './types/settings';\nimport {\n    wrapper,\n    form,\n    name,\n    upperlimit,\n    timeSlow,\n    timeFast,\n    startBtn,\n    ans1,\n    ans2,\n    ans3,\n    question,\n    score,\n    progress,\n    hiddenBtn,\n} from './dom';\n\nconsole.log('starting ðŸš€');\n\n// Get settings from local storage\nlet settings: SettingsType | null = JSON.parse(localStorage.getItem('USER_SETTINGS') || '{}');\n\nif (settings) {\n    name.value = settings.name || '';\n    upperlimit.value = (settings.upperlimit || 9).toString();\n    if (settings.time === 'slow') {\n        timeSlow.checked = true;\n    } else {\n        timeFast.checked = true;\n    }\n}\n\nlet SCORE = 0;\nlet TOTAL = 0;\n\nform.addEventListener('submit', e => {\n    e.preventDefault();\n\n    const formData: any = form.elements;\n\n    settings = {\n        name: formData[0].value,\n        id: '12345',\n        time: formData[1].checked ? formData[1].value : formData[2].value,\n        upperlimit: formData[3].value,\n        kind: 'plus',\n    };\n\n    localStorage.setItem('USER_SETTINGS', JSON.stringify(settings));\n    document.documentElement.style.setProperty('--page', '-100vh');\n});\n\nconst getSum = (max: number): { text: string; solution: number } => {\n    const sum1 = Math.floor(Math.random() * (max / 2) + 1);\n    const sum2 = Math.floor(Math.random() * (max / 2) + 1);\n\n    return { text: sum1.toString() + ' + ' + sum2.toString(), solution: sum1 + sum2 };\n};\n\nconst getWrongAnswers = (max: number, answer: number): number[] => {\n    let wrong1 = answer;\n    let wrong2 = answer;\n\n    while (wrong1 === answer || wrong2 === answer || wrong1 === wrong2) {\n        wrong1 = Math.floor(Math.random() * max + 1);\n        wrong2 = Math.floor(Math.random() * max + 1);\n    }\n\n    return [wrong1, wrong2];\n};\n\nlet looper;\nconst answer = (e: any): void => {\n    TOTAL++;\n    if (e && e.target.classList.contains('correct')) {\n        SCORE++;\n    }\n    hiddenBtn.focus();\n    progress.setAttribute('value', '100');\n    clearInterval(looper);\n\n    ans1.classList.remove('correct');\n    ans2.classList.remove('correct');\n    ans3.classList.remove('correct');\n\n    score.innerHTML = `${SCORE}/${TOTAL}`;\n    createExercise();\n};\n\nconst createExercise = (): void => {\n    if (!settings) return;\n    const sum = getSum(settings.upperlimit);\n    question.innerHTML = sum.text;\n\n    const answers = [ans1, ans2, ans3];\n\n    const rand = Math.floor(Math.random() * answers.length);\n    answers[rand].innerHTML = sum.solution.toString();\n    answers[rand].classList.add('correct');\n\n    let wrongAnswers = getWrongAnswers(settings.upperlimit, sum.solution);\n    answers[(rand + 1) % answers.length].innerHTML = wrongAnswers[0].toString();\n    answers[(rand + 2) % answers.length].innerHTML = wrongAnswers[1].toString();\n\n    let ticker = settings.time === 'fast' ? 6 : 12;\n    let timeRemaining = 100;\n    const jumpTime = 100 / ticker;\n    progress.setAttribute('value', '100');\n\n    looper = setInterval(() => {\n        ticker--;\n        timeRemaining -= jumpTime;\n\n        if (timeRemaining < 0) {\n            answer(null);\n        } else {\n            progress.setAttribute('value', Math.floor(timeRemaining).toString());\n        }\n    }, 1000);\n};\n\nstartBtn.addEventListener('click', () => {\n    startBtn.classList.add('hide');\n    wrapper.classList.remove('hide');\n    ans1.classList.remove('hide');\n    ans2.classList.remove('hide');\n    ans3.classList.remove('hide');\n    createExercise();\n});\n\nans1.addEventListener('click', answer);\nans2.addEventListener('click', answer);\nans3.addEventListener('click', answer);\n"]}